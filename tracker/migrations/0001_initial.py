# Generated by Django 3.0.5 on 2020-07-28 00:00

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Chore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('min_vwork', models.FloatField(default=-1.0)),
                ('interval', models.PositiveIntegerField(default=1)),
                ('next_date', models.DateField(default=datetime.date(2020, 7, 29))),
                ('last_date', models.DateField(null=True)),
                ('last_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_chore', to=settings.AUTH_USER_MODEL)),
                ('next_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='upcoming_chore', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Space',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserSpace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available', models.BooleanField(default=True)),
                ('space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.Space')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserChore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vwork', models.FloatField(default=0)),
                ('vdelta', models.FloatField(default=1.0)),
                ('work', models.IntegerField(default=0)),
                ('delta_src', models.FloatField(default=100.0)),
                ('available', models.BooleanField(default=True)),
                ('chore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.Chore')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['vwork'],
            },
        ),
        migrations.AddField(
            model_name='space',
            name='members',
            field=models.ManyToManyField(related_name='spaces', through='tracker.UserSpace', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='space',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='tracker.Space'),
        ),
        migrations.AddField(
            model_name='chore',
            name='parent_space',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chores', to='tracker.Space'),
        ),
        migrations.AddField(
            model_name='chore',
            name='users',
            field=models.ManyToManyField(related_name='chores', through='tracker.UserChore', to=settings.AUTH_USER_MODEL),
        ),
    ]
